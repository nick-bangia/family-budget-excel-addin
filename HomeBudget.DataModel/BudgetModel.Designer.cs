//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BudgetModel", "factLineItems_dimCategories", "factLineItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HomeBudget.DataModel.factLineItems), "dimCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HomeBudget.DataModel.dimCategories), true)]
[assembly: EdmRelationshipAttribute("BudgetModel", "factLineItems_dimTypes", "factLineItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HomeBudget.DataModel.factLineItems), "dimTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HomeBudget.DataModel.dimTypes), true)]
[assembly: EdmRelationshipAttribute("BudgetModel", "factLineItems_dimMonths", "factLineItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HomeBudget.DataModel.factLineItems), "dimMonths", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HomeBudget.DataModel.dimMonths), true)]
[assembly: EdmRelationshipAttribute("BudgetModel", "factLineItems_dimDaysOfWeek", "factLineItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HomeBudget.DataModel.factLineItems), "dimDaysOfWeek", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HomeBudget.DataModel.dimDaysOfWeek), true)]

#endregion

namespace HomeBudget.DataModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BudgetEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BudgetEntities object using the connection string found in the 'BudgetEntities' section of the application configuration file.
        /// </summary>
        public BudgetEntities() : base("name=BudgetEntities", "BudgetEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BudgetEntities object.
        /// </summary>
        public BudgetEntities(string connectionString) : base(connectionString, "BudgetEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BudgetEntities object.
        /// </summary>
        public BudgetEntities(EntityConnection connection) : base(connection, "BudgetEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<factLineItems> factLineItems
        {
            get
            {
                if ((_factLineItems == null))
                {
                    _factLineItems = base.CreateObjectSet<factLineItems>("factLineItems");
                }
                return _factLineItems;
            }
        }
        private ObjectSet<factLineItems> _factLineItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<dimMonths> dimMonths
        {
            get
            {
                if ((_dimMonths == null))
                {
                    _dimMonths = base.CreateObjectSet<dimMonths>("dimMonths");
                }
                return _dimMonths;
            }
        }
        private ObjectSet<dimMonths> _dimMonths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<dimDaysOfWeek> dimDaysOfWeeks
        {
            get
            {
                if ((_dimDaysOfWeeks == null))
                {
                    _dimDaysOfWeeks = base.CreateObjectSet<dimDaysOfWeek>("dimDaysOfWeeks");
                }
                return _dimDaysOfWeeks;
            }
        }
        private ObjectSet<dimDaysOfWeek> _dimDaysOfWeeks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<dimCategories> dimCategories
        {
            get
            {
                if ((_dimCategories == null))
                {
                    _dimCategories = base.CreateObjectSet<dimCategories>("dimCategories");
                }
                return _dimCategories;
            }
        }
        private ObjectSet<dimCategories> _dimCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<dimTypes> dimTypes
        {
            get
            {
                if ((_dimTypes == null))
                {
                    _dimTypes = base.CreateObjectSet<dimTypes>("dimTypes");
                }
                return _dimTypes;
            }
        }
        private ObjectSet<dimTypes> _dimTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the factLineItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofactLineItems(factLineItems factLineItems)
        {
            base.AddObject("factLineItems", factLineItems);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the dimMonths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodimMonths(dimMonths dimMonths)
        {
            base.AddObject("dimMonths", dimMonths);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the dimDaysOfWeeks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodimDaysOfWeeks(dimDaysOfWeek dimDaysOfWeek)
        {
            base.AddObject("dimDaysOfWeeks", dimDaysOfWeek);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the dimCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodimCategories(dimCategories dimCategories)
        {
            base.AddObject("dimCategories", dimCategories);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the dimTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodimTypes(dimTypes dimTypes)
        {
            base.AddObject("dimTypes", dimTypes);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BudgetModel", Name="dimCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dimCategories : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dimCategories object.
        /// </summary>
        /// <param name="categoryKey">Initial value of the CategoryKey property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="categoryPrefix">Initial value of the CategoryPrefix property.</param>
        public static dimCategories CreatedimCategories(global::System.Guid categoryKey, global::System.String categoryName, global::System.String categoryPrefix)
        {
            dimCategories dimCategories = new dimCategories();
            dimCategories.CategoryKey = categoryKey;
            dimCategories.CategoryName = categoryName;
            dimCategories.CategoryPrefix = categoryPrefix;
            return dimCategories;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CategoryKey
        {
            get
            {
                return _CategoryKey;
            }
            set
            {
                if (_CategoryKey != value)
                {
                    OnCategoryKeyChanging(value);
                    ReportPropertyChanging("CategoryKey");
                    _CategoryKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryKey");
                    OnCategoryKeyChanged();
                }
            }
        }
        private global::System.Guid _CategoryKey;
        partial void OnCategoryKeyChanging(global::System.Guid value);
        partial void OnCategoryKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryPrefix
        {
            get
            {
                return _CategoryPrefix;
            }
            set
            {
                OnCategoryPrefixChanging(value);
                ReportPropertyChanging("CategoryPrefix");
                _CategoryPrefix = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryPrefix");
                OnCategoryPrefixChanged();
            }
        }
        private global::System.String _CategoryPrefix;
        partial void OnCategoryPrefixChanging(global::System.String value);
        partial void OnCategoryPrefixChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BudgetModel", "factLineItems_dimCategories", "factLineItems")]
        public EntityCollection<factLineItems> ItemsInThisCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<factLineItems>("BudgetModel.factLineItems_dimCategories", "factLineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<factLineItems>("BudgetModel.factLineItems_dimCategories", "factLineItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BudgetModel", Name="dimDaysOfWeek")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dimDaysOfWeek : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dimDaysOfWeek object.
        /// </summary>
        /// <param name="dayId">Initial value of the DayId property.</param>
        /// <param name="dayName">Initial value of the DayName property.</param>
        public static dimDaysOfWeek CreatedimDaysOfWeek(global::System.Int16 dayId, global::System.String dayName)
        {
            dimDaysOfWeek dimDaysOfWeek = new dimDaysOfWeek();
            dimDaysOfWeek.DayId = dayId;
            dimDaysOfWeek.DayName = dayName;
            return dimDaysOfWeek;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 DayId
        {
            get
            {
                return _DayId;
            }
            set
            {
                if (_DayId != value)
                {
                    OnDayIdChanging(value);
                    ReportPropertyChanging("DayId");
                    _DayId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DayId");
                    OnDayIdChanged();
                }
            }
        }
        private global::System.Int16 _DayId;
        partial void OnDayIdChanging(global::System.Int16 value);
        partial void OnDayIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DayName
        {
            get
            {
                return _DayName;
            }
            set
            {
                OnDayNameChanging(value);
                ReportPropertyChanging("DayName");
                _DayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DayName");
                OnDayNameChanged();
            }
        }
        private global::System.String _DayName;
        partial void OnDayNameChanging(global::System.String value);
        partial void OnDayNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BudgetModel", "factLineItems_dimDaysOfWeek", "factLineItems")]
        public EntityCollection<factLineItems> ItemsForThisDay
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<factLineItems>("BudgetModel.factLineItems_dimDaysOfWeek", "factLineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<factLineItems>("BudgetModel.factLineItems_dimDaysOfWeek", "factLineItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BudgetModel", Name="dimMonths")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dimMonths : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dimMonths object.
        /// </summary>
        /// <param name="monthId">Initial value of the MonthId property.</param>
        /// <param name="monthName">Initial value of the MonthName property.</param>
        public static dimMonths CreatedimMonths(global::System.Int16 monthId, global::System.String monthName)
        {
            dimMonths dimMonths = new dimMonths();
            dimMonths.MonthId = monthId;
            dimMonths.MonthName = monthName;
            return dimMonths;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 MonthId
        {
            get
            {
                return _MonthId;
            }
            set
            {
                if (_MonthId != value)
                {
                    OnMonthIdChanging(value);
                    ReportPropertyChanging("MonthId");
                    _MonthId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MonthId");
                    OnMonthIdChanged();
                }
            }
        }
        private global::System.Int16 _MonthId;
        partial void OnMonthIdChanging(global::System.Int16 value);
        partial void OnMonthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonthName
        {
            get
            {
                return _MonthName;
            }
            set
            {
                OnMonthNameChanging(value);
                ReportPropertyChanging("MonthName");
                _MonthName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MonthName");
                OnMonthNameChanged();
            }
        }
        private global::System.String _MonthName;
        partial void OnMonthNameChanging(global::System.String value);
        partial void OnMonthNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BudgetModel", "factLineItems_dimMonths", "factLineItems")]
        public EntityCollection<factLineItems> ItemsInThisMonth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<factLineItems>("BudgetModel.factLineItems_dimMonths", "factLineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<factLineItems>("BudgetModel.factLineItems_dimMonths", "factLineItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BudgetModel", Name="dimTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dimTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dimTypes object.
        /// </summary>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static dimTypes CreatedimTypes(global::System.Int32 typeId, global::System.String typeName)
        {
            dimTypes dimTypes = new dimTypes();
            dimTypes.TypeId = typeId;
            dimTypes.TypeName = typeName;
            return dimTypes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                if (_TypeId != value)
                {
                    OnTypeIdChanging(value);
                    ReportPropertyChanging("TypeId");
                    _TypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TypeId");
                    OnTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _TypeId;
        partial void OnTypeIdChanging(global::System.Int32 value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BudgetModel", "factLineItems_dimTypes", "factLineItems")]
        public EntityCollection<factLineItems> ItemsOfThisType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<factLineItems>("BudgetModel.factLineItems_dimTypes", "factLineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<factLineItems>("BudgetModel.factLineItems_dimTypes", "factLineItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BudgetModel", Name="factLineItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class factLineItems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new factLineItems object.
        /// </summary>
        /// <param name="uniqueKey">Initial value of the UniqueKey property.</param>
        /// <param name="monthId">Initial value of the MonthId property.</param>
        /// <param name="dayOfMonthId">Initial value of the DayOfMonthId property.</param>
        /// <param name="dayOfWeekId">Initial value of the DayOfWeekId property.</param>
        /// <param name="yearId">Initial value of the YearId property.</param>
        /// <param name="categoryKey">Initial value of the CategoryKey property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        public static factLineItems CreatefactLineItems(global::System.Guid uniqueKey, global::System.Int16 monthId, global::System.Int16 dayOfMonthId, global::System.Int16 dayOfWeekId, global::System.Int32 yearId, global::System.Guid categoryKey, global::System.String description, global::System.Decimal amount, global::System.Int32 typeId)
        {
            factLineItems factLineItems = new factLineItems();
            factLineItems.UniqueKey = uniqueKey;
            factLineItems.MonthId = monthId;
            factLineItems.DayOfMonthId = dayOfMonthId;
            factLineItems.DayOfWeekId = dayOfWeekId;
            factLineItems.YearId = yearId;
            factLineItems.CategoryKey = categoryKey;
            factLineItems.Description = description;
            factLineItems.Amount = amount;
            factLineItems.TypeId = typeId;
            return factLineItems;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UniqueKey
        {
            get
            {
                return _UniqueKey;
            }
            set
            {
                if (_UniqueKey != value)
                {
                    OnUniqueKeyChanging(value);
                    ReportPropertyChanging("UniqueKey");
                    _UniqueKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UniqueKey");
                    OnUniqueKeyChanged();
                }
            }
        }
        private global::System.Guid _UniqueKey;
        partial void OnUniqueKeyChanging(global::System.Guid value);
        partial void OnUniqueKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 MonthId
        {
            get
            {
                return _MonthId;
            }
            set
            {
                OnMonthIdChanging(value);
                ReportPropertyChanging("MonthId");
                _MonthId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthId");
                OnMonthIdChanged();
            }
        }
        private global::System.Int16 _MonthId;
        partial void OnMonthIdChanging(global::System.Int16 value);
        partial void OnMonthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 DayOfMonthId
        {
            get
            {
                return _DayOfMonthId;
            }
            set
            {
                OnDayOfMonthIdChanging(value);
                ReportPropertyChanging("DayOfMonthId");
                _DayOfMonthId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayOfMonthId");
                OnDayOfMonthIdChanged();
            }
        }
        private global::System.Int16 _DayOfMonthId;
        partial void OnDayOfMonthIdChanging(global::System.Int16 value);
        partial void OnDayOfMonthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 DayOfWeekId
        {
            get
            {
                return _DayOfWeekId;
            }
            set
            {
                OnDayOfWeekIdChanging(value);
                ReportPropertyChanging("DayOfWeekId");
                _DayOfWeekId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayOfWeekId");
                OnDayOfWeekIdChanged();
            }
        }
        private global::System.Int16 _DayOfWeekId;
        partial void OnDayOfWeekIdChanging(global::System.Int16 value);
        partial void OnDayOfWeekIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YearId
        {
            get
            {
                return _YearId;
            }
            set
            {
                OnYearIdChanging(value);
                ReportPropertyChanging("YearId");
                _YearId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearId");
                OnYearIdChanged();
            }
        }
        private global::System.Int32 _YearId;
        partial void OnYearIdChanging(global::System.Int32 value);
        partial void OnYearIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CategoryKey
        {
            get
            {
                return _CategoryKey;
            }
            set
            {
                OnCategoryKeyChanging(value);
                ReportPropertyChanging("CategoryKey");
                _CategoryKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryKey");
                OnCategoryKeyChanged();
            }
        }
        private global::System.Guid _CategoryKey;
        partial void OnCategoryKeyChanging(global::System.Guid value);
        partial void OnCategoryKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.Int32 _TypeId;
        partial void OnTypeIdChanging(global::System.Int32 value);
        partial void OnTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BudgetModel", "factLineItems_dimCategories", "dimCategories")]
        public dimCategories Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dimCategories>("BudgetModel.factLineItems_dimCategories", "dimCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dimCategories>("BudgetModel.factLineItems_dimCategories", "dimCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<dimCategories> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dimCategories>("BudgetModel.factLineItems_dimCategories", "dimCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<dimCategories>("BudgetModel.factLineItems_dimCategories", "dimCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BudgetModel", "factLineItems_dimTypes", "dimTypes")]
        public dimTypes Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dimTypes>("BudgetModel.factLineItems_dimTypes", "dimTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dimTypes>("BudgetModel.factLineItems_dimTypes", "dimTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<dimTypes> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dimTypes>("BudgetModel.factLineItems_dimTypes", "dimTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<dimTypes>("BudgetModel.factLineItems_dimTypes", "dimTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BudgetModel", "factLineItems_dimMonths", "dimMonths")]
        public dimMonths Month
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dimMonths>("BudgetModel.factLineItems_dimMonths", "dimMonths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dimMonths>("BudgetModel.factLineItems_dimMonths", "dimMonths").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<dimMonths> MonthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dimMonths>("BudgetModel.factLineItems_dimMonths", "dimMonths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<dimMonths>("BudgetModel.factLineItems_dimMonths", "dimMonths", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BudgetModel", "factLineItems_dimDaysOfWeek", "dimDaysOfWeek")]
        public dimDaysOfWeek DayOfWeek
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dimDaysOfWeek>("BudgetModel.factLineItems_dimDaysOfWeek", "dimDaysOfWeek").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dimDaysOfWeek>("BudgetModel.factLineItems_dimDaysOfWeek", "dimDaysOfWeek").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<dimDaysOfWeek> DayOfWeekReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dimDaysOfWeek>("BudgetModel.factLineItems_dimDaysOfWeek", "dimDaysOfWeek");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<dimDaysOfWeek>("BudgetModel.factLineItems_dimDaysOfWeek", "dimDaysOfWeek", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
